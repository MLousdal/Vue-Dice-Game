@use "../base/variables" as *;

.loading {
  color: transparent !important;
  pointer-events: none;
  position: relative;
  &::after {
    animation: loading 500ms infinite linear;
    background: transparent;
    border: $border-width-thick solid;
    border-radius: $border-radius-o;
    border-left-color: var(--font-color);
    border-bottom-color: var(--font-color);
    border-right-color: transparent;
    border-top-color: transparent;
    content: "";
    display: block;
    height: $unit-1;
    left: 50%;
    margin-left: -#{$unit-05};
    margin-top: -#{$unit-05};
    opacity: 1;
    padding: 0;
    position: absolute;
    top: 50%;
    width: $unit-1;
  }

  &.primary::after {
    border-left-color: var(--font-color-inverse);
    border-bottom-color: var(--font-color-inverse);
  }

  &.success::after,
  &.error::after,
  &.warning::after {
    border-left-color: $neutral-0;
    border-bottom-color: $neutral-0;
  }

  &.l {
    &::after {
      height: $unit-15;
      margin-left: -0.75em;
      margin-top: -0.75em;
      width: $unit-15;
    }
  }
}

@keyframes loading {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.underline {
  padding-bottom: 2px;
  background: linear-gradient(var(--color-secondary), var(--color-secondary))
    bottom;
  background-size: 0% 2px;
  background-repeat: no-repeat;
  transition: all 0.45s;

  &:hover,
  &:focus {
    background-size: 75% 2px;
    outline: none;
  }
}

.grow {
  transition: all 0.45s;

  &:hover,
  &:focus {
    transform: scale(1.1);
  }

  &-s:hover,
  &-s:focus,
  &-cta:hover,
  &-cta:focus {
    transform: scale(1.05);
  }
}

.error-animation {
  color: $error-color;
  animation-name: error;
  animation-duration: 1.2s;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@keyframes error {
  from {
    color: $error-color;
  }
  to {
    color: var(--font-color);
  }
}
