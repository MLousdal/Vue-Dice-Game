@use "../base/variables" as *;

.btn,
button,
input[type="submit"],
input[type="reset"],
input[type="button"] {
  background-color: transparent;
  border-radius: $border-radius-s;
  border: $border-width solid var(--border);
  color: var(--border);
  cursor: pointer;
  display: flex;
  flex-direction: row;
  gap: $unit-05;
  align-items: center;
  font-family: unset;
  font-size: 0.8rem;
  font-weight: 700;
  margin: $border-offset;
  padding: $unit-05 $unit-15;
  text-align: center;
  text-decoration: none;
  text-transform: uppercase;
  white-space: nowrap;
  width: fit-content;

  &:hover,
  &:focus,
  &.active {
    color: var(--border-dark);
    border-width: $border-width-thick;
    border-color: var(--border-dark);
    text-decoration: none;
    margin: 0;
  }

  &.s {
    font-size: 0.6rem;
  }

  &.l {
    font-size: 1.2rem;
    // padding: $unit-1 $unit-15;
  }

  &[disabled],
  &:disabled,
  &.disabled {
    cursor: not-allowed;
    opacity: 0.5;
    pointer-events: none;
  }

  &.primary {
    color: var(--font-color-inverse);
    background-color: var(--color-primary);
    border-color: var(--color-primary);

    &:hover,
    &:focus,
    &.active {
      background-color: var(--color-primary-light);
      border-color: var(--color-primary-light);
    }
  }

  &.secondary {
    color: var(--font-color);
    background-color: var(--color-secondary);
    border-color: var(--color-secondary);

    &:hover,
    &:focus,
    &.active {
      background-color: var(--color-secondary-light);
      border-color: var(--color-secondary-light);
    }
  }

  &.contrast {
    color: var(--font-color-inverse);
    background-color: var(--font-color);
    border-color: var(--font-color);

    &:hover,
    &:focus,
    &.active {
      background-color: var(--font-color-dark);
      border-color: var(--font-color-dark);
    }
  }

  &.success {
    color: $neutral-0;
    background-color: $success-color;
    border-color: $success-color;

    &:hover,
    &:focus,
    &.active {
      background-color: var(--color-success-light);
      border-color: var(--color-success-light);
    }
  }

  &.warning {
    color: $neutral-0;
    background-color: $warning-color;
    border-color: $warning-color;

    &:hover,
    &:focus,
    &.active {
      background-color: var(--color-warning-light);
      border-color: var(--color-warning-light);
    }
  }

  &.error {
    color: $neutral-0;
    background-color: $error-color;
    border-color: $error-color;

    &:hover,
    &:focus,
    &.active {
      background-color: var(--color-error-light);
      border-color: var(--color-error-light);
    }
  }

  &.outline {
    background-color: transparent;
  }
}

@media screen and (max-width: 500px) {
  .btn,
  button,
  input[type="submit"],
  input[type="reset"],
  input[type="button"] {
    font-size: 0.65rem;
  
    &.s {
      font-size: 0.4rem;
    }
  
    &.l {
      font-size: 0.8rem;
      padding: $unit-1 $unit-15;
    }
  }
}
